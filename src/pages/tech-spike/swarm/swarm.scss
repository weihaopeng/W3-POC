@use 'sass:map';
@use 'sass:meta';
/*************** basic ***************/
html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  background: #eee;
  overflow: hidden;
}

.chain-column, .block-column, .bp-column, .swarm-column {
  display: flex;
  flex-direction: column;
  margin-right: 14px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  &::-webkit-scrollbar {
    display: none;
  }
  position: relative;
  &::after {
    position: absolute;
    content: '';
    bottom: 0;
    width: 100%;
    height: 12px;
    background: linear-gradient(180deg,rgba(61,63,80,0.00), rgba(61,63,80,0.90));
    border-radius: 0px 0px 4px 4px;
  }
}

.chain-column, .block-column, .bp-column {
  width: 270px;
  overflow-y: auto;
  max-height: 100%;
  &__title {
    color: #fff;
    font-size: 20px;
    text-align: left;
    margin: 10px 16px 15px;
  }
}

.bp-column  {
  margin-right: 0;
}

.swarm-column {
  flex-grow: 1;
}

#chain-container, #block-container, #bp-container {
  overflow-y: auto;
  &::-webkit-scrollbar {
    display: none;
  }
}

/*************** swarm ***************/
@mixin swarm-tooltip-wrapper-layout($layout) {
  $card-flex-direction: row;
  $tooltip-flex-direction: column;
  $tooltip-card-margin-direction: right;
  $tooltip-margin-direction: top;
  @if $layout == horizontal {
    $card-flex-direction: column;
    $tooltip-flex-direction: row;
    $tooltip-card-margin-direction: bottom;
    $tooltip-margin-direction: left;
  }

  flex-direction: $card-flex-direction;
  .swarm-tooltip-card {
    flex-direction: $tooltip-flex-direction;
    &:not(:last-child) {
      margin-#{$tooltip-card-margin-direction}: 8px;
      padding-#{$tooltip-card-margin-direction}: 8px;
      border-#{$tooltip-card-margin-direction}: solid 1px #333;
    }
    .swarm-tooltip + .swarm-tooltip {
      margin-#{$tooltip-margin-direction}: 24px;
    }
  }
}

$tooltip-bg-map: (
  'tx': #40a9ff,
  'bp': #73d13d,
  'block': #b37feb,
  'fork': #f759ab,
  'invalid': #8c8c8c
);

@mixin tooltip-bg($selectors...) {
  @for $i from 0 to length($selectors) {
    $type: nth($selectors, $i + 1);
    &.#{$type} {
      background-color: rgba(map.get($tooltip-bg-map, #{$type}), 0.5);
      &.valid {
        background-color: map.get($tooltip-bg-map, #{$type});
      }
    }
  }
}

.swarm-cvs-container {
  flex-grow: 1;
  // background: #dcdcdc;
  width: 100%;
  position: relative;
  padding: 20px;
  box-sizing: border-box;
  #swarm-node-cvs {
    width: 100%;
    height: 100%;
  }
  #swarm-tooltip-container {
    position: absolute;
    top: 20px;
    left: 20px;
    width: calc(100% - 80px);
    height: calc(100% - 80px);

    .swarm-tooltip-wrapper {
      position: absolute;
      display: flex;
      flex-direction: row;
      .swarm-tooltip-card {
        display: flex;
        .swarm-tooltip {
          padding: 12px;
          position: relative;
          @include tooltip-bg('tx', 'bp', 'block', 'fork', 'invalid');
          &.valid::after {
            content: 'âœ…';
            position: absolute;
            right: -10px;
            top: -10px;
            color: green;
          }
          &.to-remove {
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
          }
          .info-in-tooltip {
            display: inline-block;
            max-width: 80px;
            text-overflow: ellipsis;
            overflow: hidden;
            vertical-align: middle;
          }
        }
      }
      &.horizontal {
        @include swarm-tooltip-wrapper-layout(horizontal)
      }
      &.vertical {
        @include swarm-tooltip-wrapper-layout(vertical)
      }
    }
  }
}

/*************** chain, block, bp ***************/
@keyframes yellow-fade {
  0% {
    background: #fff;
  }
  50% {
    background: #fff1b8;
  }
  100% {
    background: #fff;
  }
}

$block-selected-bg-color-map: (
  'chain': #a9eabf,
  'block': #d9a9ea,
  'bp': #ead9a9
);
$block-selected-border-color-map: (
  'chain': #1acd57,
  'block': #c229cf,
  'bp': #dfa517
);
$block-selected-shadow-color-map: (
  'chain': rgba(18,136,58,0.60),
  'block': rgba(18,136,58,0.60),
  'bp': rgba(136,102,18,0.60)
);

@mixin container($types...) {
  @for $i from 0 to length($types) {
    $type: nth($types, $i + 1);

    .#{$type}-container {
      border: solid 1px #dcdcdc;
      border-radius: 4px;
      margin: 6px 10px 12px;
      padding: 15px 18px;
      // animation: yellow-fade 2s linear 1;
      position: relative;
      cursor: pointer;
      font-size: 12px;
      background: #eff0f9;
      box-sizing: border-box;
      box-shadow: 0px 2px 6px 0px rgba(0,0,0,0.20);
      border: solid 2px #eff0f9;
      &.highlight, &.selected {
        background-color: map.get($block-selected-bg-color-map, #{$type});
        border-color: map.get($block-selected-border-color-map, #{$type});
        box-shadow: 0 2px 8px 0 map.get($block-selected-shadow-color-map, #{$type});
      }
      &:hover {
        border-color: map.get($block-selected-border-color-map, #{$type});
        box-shadow: 0 2px 8px 0 map.get($block-selected-shadow-color-map, #{$type});
      }
    }
    .#{$type}-type {
      margin-right: 8px;
      color: #666;
      width: 4em;
      display: inline-block;
    }
  }
}

@include container('chain', 'block', 'bp');

/*************** simulator control ***************/

#control-simulator {
  position: absolute;
  bottom: 5vh;
  left: 600px;
  border: solid 1px #dcdcdc;
  box-shadow: 0 0 4px 0 #000;
  // padding: 8px 16px;
  border-radius: 4px;
  background: #fff;
  user-select: none;
  .w3-form {
    margin: 8px 16px;
  }
  .control-simulator__dragging-bar {
    height: 24px;
    width: 100%;
    cursor: move;
    color: #dcdcdc;
    text-align: center;
    &:hover {
      background: #dcdcdc;
      color: #fff;
    }
  }
}
